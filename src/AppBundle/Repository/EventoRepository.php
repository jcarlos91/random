<?php

namespace AppBundle\Repository;

/**
 * CitasRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EventoRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param $company
     * @param $email
     * @param $startDate
     * @param $endDate
     * @param $user
     * @return array
     */
    public function getEventByDates($company, $email, $startDate, $endDate, $user){
        $q = $this->createQueryBuilder('e')
            ->join('e.userCreated','u')
            ->where('e.delete = 0')
        ;

        if($company != null){
            $q->andWhere($q->expr()->like('e.empresa', $q->expr()->literal('%' . $company . '%')));
        }

        if($email != null){
            $q->andWhere($q->expr()->like('e.email', $q->expr()->literal('%'. $email .'%')));
        }

        if($startDate != null && $endDate != null){
            $q
                ->andWhere($q->expr()->between('e.dateCreated',':startDate', ':endDate'))
                ->setParameter('startDate',$startDate->format('Y-m-d'))
                ->setParameter('endDate', $endDate->format('Y-m-d'))
            ;
        }

        if($user != null){
            $q
                ->andWhere('e.userCreated = :user')
                ->setParameter('user',$user)
            ;
        }

        return $q->getQuery()->getResult();
    }

    public function getEvents($user, $dateStart, $dateEnd){
        $q = $this->createQueryBuilder('e')
            ->where('e.delete = 0')
            ->andWhere('e.userCreated = :user')
            ->setParameter('user',$user)
        ;

        $q
            ->andWhere($q->expr()->between('e.dateCreated',':startDate', ':endDate'))
            ->setParameter('startDate',$dateStart)
            ->setParameter('endDate',$dateEnd)
        ;

        return $q->getQuery()->getResult();
    }
}
